# -*- coding: utf-8 -*-
import os
import sys
import tarfile
from subprocess import Popen


class Keyword:

    TMP_DIR = "/tmp"
    VAGRANT_BOXES_DIR = "/vagrant/boxes"

    def main(self):
        # - Use Config attributes
        self.vm_name = self.vm_name
        # ----------------------------
        self.export_vm_configuration()
        self.create_vagrant_template()
        self.create_box()

    def create_vagrant_template(self):
        template = """
Vagrant::Config.run do |config|
  # This Vagrantfile is auto-generated by `vagrant package` to contain
  # the MAC address of the box. Custom configuration should be placed in
  # the actual `Vagrantfile` in this box.
  config.vm.base_mac = "0800274B29D3"
end

# Load include vagrant file if it exists after the auto-generated
# so it can override any of the settings
include_vagrantfile = File.expand_path("../include/_Vagrantfile", __FILE__)
load include_vagrantfile if File.exist?(include_vagrantfile)
"""
        with open(os.path.join(self.work_dir, "Vagrantfile"), "w") as vagrant_file:
            vagrant_file.write(template)

    def export_vm_configuration(self):
        self.work_dir = os.path.join(self.TMP_DIR, self.vm_name)
        os.mkdir(self.work_dir)
        Popen('VBoxManage export %s --output %s' % (self.vm_name, os.path.join(self.work_dir, self.vm_name + ".ovf")),
              shell=True, stdout=sys.stdout, stderr=sys.stdout).communicate()

    def create_box(self):
        with tarfile.open(os.path.join(self.VAGRANT_BOXES_DIR, "%s.box" % self.vm_name), "w") as tar:
            tar.add(self.work_dir)


