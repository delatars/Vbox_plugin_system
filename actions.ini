;Mandatory section.      
[General]
; List of enabled plugins, you can create your plugin, put it to the plugins dir and enabling it here.
enabled_plugins = vbox_start, unix_update, vbox_stop, port_forwarding, test, vbox_export
; Global parameter (in minutes) to the end of which plugin process will be terminated. default=20 (mins)
;   You can specify your own "time_to_kill" parameter for each plugin.
;   Just add "time_to_kill" argument to your Plugin classobj.
time_to_kill = 20

[test]
type = vm
actions = test
port = 333
; You can create vm objects and assign them any actions.
; Specify preffered section name.
[my centos]
; Mandatory keys.
;   Key specifies, which type of object will be generated (vm, group, alias).
type = vm
;   Key specifies plugins which will be performed for this object.
actions = vbox_export
;   Key specifies to which group this object belongs.
group = linux
; User keys.
;   You can specify your keys and use it in your plugin's classobj attributes. ex: self.vm_name
vm_name = ubuntu1610-amd64_ubuntu1610_1523264320143_80330
forwarding_ports = vm_ssh:22:2020
control_type = ssh
timeout_up = 300
timeout_down = 300



; You can create groups and combine it with other objects.
;   Groups support attribute inheritance (groups attributes have a higher priority than vm attributes).
;   Specify name of the group.
[linux]
; Mandatory keys.
type = group
; User keys.
;actions = Vbox_start, ...
;cred = root:root
control_type = win_rm

; You can combine some plugins in one action, named alias.
[aliases]
type = aliases
; By default aliases extends to all objects, but you can assign aliases at specific group
;group = linux
common_actions = port_forwarding

[linux_aliases]
type = aliases
; By default aliases extends to all objects, but you can assign aliases at specific group
group = linux
reboot = vbox_start, vbox_stop